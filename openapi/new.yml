    PostTag:
      type: object
      properties:
        value:
          type: string
          nullable: false
          description: 'tag string'
          example: 'Tag string'
        type:
            type: string
            nullable: true
            example: uuif7eaf61b-093e-4464-a4da-b36b849f0a1b
        creator_user_id:
          type: string
          nullable: false
          example: '13b95669-ed98-4840-8652-d6b7a19964db'
    Tag:
        type: object
        properties:
          id:
            type: string
            description: uuid of tag.
            example: uuif7eaf61b-093e-4464-a4da-b36b849f0a1b
          value:
            type: string
            description: inserted tag key
            example: "Tag 1"
          creator_user_id:
            type: string
            description: User who associated
            example: "Tag 1"
          active:
            type: boolean
            description: Is the tag still associated
          purpose:
            type: string
            description: purpose category of the tag
    PostTagAssociation:
      type: object
      properties:
        id:
          type: string
          nullable: false
          description: "uuidv4 of the tag"
          example: "dfb1a892-b3b7-4531-973f-0ba0c7979580"
        user_id:
          type: string
          nullable: false
          description: "uuidv4 of the user"
          example: "4a72b051-459e-48d1-99ec-603d0f3768c2"
    TagAssociation:
        type: object
        properties:
          id:
            type: string
            description: uuid of tag.
            example: uuif7eaf61b-093e-4464-a4da-b36b849f0a1b
          value:
            type: string
            description: inserted tag key
            example: "Tag 1"
          user:
            type: string
            description: User who associated
            example: "Tag 1"
          associated:
            type: boolean
            description: Is the tag associated with an assessment
          purpose:
            type: string
            description: purpose category of the tag
    TagType:
        type: object
        properties:
          id:
            type: string
            description: uuid of tag type.
            example: uuif7eaf61b-093e-4464-a4da-b36b849f0a1b
          purpose:
            type: string
            description: The tag category
            example: "People"
          description:
            type: string
            description: A description of the tag type
            example: "This tag is for these things"


# api
  '/application/{application_id}/tag':
    get:
      tags:
        - tag management
      summary: Get all active tag associations for an assessment
      description: returns all active tag associations for an assessment
      operationId: api.routes.assessment_routes.get_tags_associated_with_assessment
      parameters:
        - name: application_id
          in: path
          schema:
            type: string
          required: true
      responses:
        200:
          description: SUCCESS - A list of assessment tags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components.yml#/components/schemas/TagAssociation'
    put:
      tags:
        - tag management
      summary: Put a list of tags associated with an assessment
      description: Put a list of tags associated with an assessment
      operationId: api.routes.assessment_routes.associate_tags_with_assessment
      parameters:
        - name: application_id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        description: Tag association creation parameters
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: 'components.yml#/components/schemas/PostTagAssociation'
      responses:
        201:
          description: SUCCESS - Tag Submitted
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: 'components.yml#/components/schemas/TagAssociation'

  '/funds/{fund_id}/rounds/{round_id}/tags':
    get:
      tags:
        - tag management
      summary: Get all the tags associated with the provided fund ID and a round ID.
      description: Returns the tags associated with the provided fund ID and a round ID.
      operationId: api.routes.tag_routes.get_tags_for_fund_round
      parameters:
        - in: path
          name: fund_id
          schema:
            type: string
          required: true
        - in: path
          name: round_id
          schema:
            type: string
          required: true
      responses:
        200:
          description: A list of tags for the given fund-round.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref : 'components.yml#/components/schemas/Tag'
        404:
          description: "Tags not found for fund-round provided."
          content:
            application/json:
              schema:
                $ref: "components.yml#/components/schemas/Error"
    post:
      tags:
        - tag management
      summary: Post a new tag for a fund round
      description: Post a new tag for a fund round
      operationId: api.routes.tag_routes.add_tag_for_fund_round
      parameters:
        - in: path
          name: fund_id
          schema:
            type: string
          required: true
        - in: path
          name: round_id
          schema:
            type: string
          required: true
      requestBody:
        description: Tag creation parameters
        required: true
        content:
          application/json:
            schema:
              $ref: 'components.yml#/components/schemas/PostTag'
      responses:
        201:
          description: SUCCESS - Tag Submitted
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: 'components.yml#/components/schemas/Tag'

  '/tag_types':
    get:
      tags:
        - tag management
      summary: Get all tag types
      description: returns all tag types
      operationId: api.routes.tag_routes.seed_and_get_tag_types
      responses:
        200:
          description: SUCCESS - A list of tag types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components.yml#/components/schemas/TagType'
