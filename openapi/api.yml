openapi: "3.0.0"
info:
  description: Assessment API for DLUHC Funding Service Design
  version: "1.0.0"
  title: Funding Service Design - Assessment Store
tags:
  - name: assessments
    description: Assessment operations

paths:
  '/application_overviews/{fund_id}/{round_id}':
    parameters:
    - name: fund_id
      in: path
      required: true
      schema:
        type: string
        format: path
    - name: round_id
      in: path
      required: true
      schema:
        type: string
        format: path
    - name: search_term
      in: query
      style: form
      schema:
        type: string
        format: query
      required: false
      explode: true
    - name: asset_type
      in: query
      style: form
      schema:
        type: string
        format: query
      required: false
      explode: true
    - name: status
      in: query
      style: form
      schema:
        type: string
        format: query
      required: false
      explode: true
    get:
      tags:
        - assessments
      summary: Search assessments
      description: List all assessments
      operationId: api.routes.all_assessments_for_fund_round_id
      responses:
        200:
          description: SUCCESS - A list of assessments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components.yml#/components/schemas/Assessment'
  '/sub_criteria_overview/{sub_criteria_id}':
    parameters:
    - name: sub_criteria_id
      in: path
      required: true
      schema:
        type: string
        format: path
    get:
      tags:
        - assessments
      summary: Sub criteria
      description: Returns sub criteria metadata and themes
      operationId: api.routes.sub_criteria
      responses:
        200:
          description: SUCCESS - A subcriteria
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/SubCriteria'
  '/application_overviews/{application_id}':
    parameters:
    - name: application_id
      in: path
      required: true
      schema:
        type: string
        format: path
    get:
      tags:
        - assessments
      summary: Retrieves data to populate the assessors task list page for a given application
      description: Retrieves data to populate the assessors task list page for a given application
      operationId: api.routes.get_assessor_task_list_state
      responses:
        200:
          description: SUCCESS - Accessor task list state
          content:
            application/json:
              schema:
                type: object
                $ref: 'assessor_task_list.yml#/components/schemas/AssessorTaskListState'
  '/comment':
    get:
      tags:
        - comments
      summary: get comment for subcriteria in application
      description: get comments for a subcriteria in an application
      operationId: api.routes.comments_for_application_sub_criteria
      responses:
        200:
          description: SUCCESS - A list of comments
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: 'components.yml#/components/schemas/Comment'
      parameters:
      - name: application_id
        in: query
        schema:
          type: string
        required: true
      - name: sub_criteria_id
        in: query
        schema:
          type: string
        required: true
      - name: comment_id
        in: query
        schema:
          type: string
        required: false
      - name: comment
        in: query
        schema:
          type: string
        required: false
      - name: date_created
        in: query
        schema:
          type: string
        required: false
      - name: user_id
        in: query
        schema:
          type: string
        required: false
      - name: comment_type
        in: query
        schema:
          type: string
        required: false
    post:
      tags:
        - comments
      summary: post a comment for subcriteria in application
      description: post a comment for a subcriteria in an application
      operationId: api.routes.post_comments_for_application_sub_criteria
      requestBody:
        description: Comment creation parameters
        required: true
        content:
          application/json:
            schema:
              $ref: 'components.yml#/components/schemas/PostComment'
            example:
              comment: "Please provide more information"
              application_id: "r3p1ac33-7412-4991-c4t1-c41cbf4d3bbd"
              sub_criteria_id: "app-info"
              user_id: "abu"
              comment_type: "COMMENT"
      responses:
        201:
          description: SUCCESS - Comment for Subcriteria in Application Submitted
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: 'components.yml#/components/schemas/Comment'
