openapi: "3.0.0"
info:
  description: Assessment API for DLUHC Funding Service Design
  version: "1.0.0"
  title: Funding Service Design - Assessment Store
tags:
  - name: assessments
    description: Assessment operations
  - name: scores
    description: Score operations
  - name: flags
    description: Flag operations

paths:
  '/application_overviews/{fund_id}/{round_id}':
    parameters:
    - name: fund_id
      in: path
      required: true
      schema:
        type: string
        format: path
    - name: round_id
      in: path
      required: true
      schema:
        type: string
        format: path
    - name: search_term
      in: query
      style: form
      schema:
        type: string
        format: query
      required: false
      explode: true
    - name: asset_type
      in: query
      style: form
      schema:
        type: string
        format: query
      required: false
      explode: true
    - name: status
      in: query
      style: form
      schema:
        type: string
        format: query
      required: false
      explode: true
    get:
      tags:
        - assessments
      summary: Search assessments
      description: List all assessments
      operationId: api.routes.all_assessments_for_fund_round_id
      responses:
        200:
          description: SUCCESS - A list of assessments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components.yml#/components/schemas/Assessment'

  '/score':
    get:
      tags:
        - scores
      summary: get score for subcriteria in application
      description: get a score for a subcriteria in an application
      operationId: api.routes.get_score_for_application_sub_criteria
      responses:
        200:
          description: SUCCESS - Score for Subcriteria in Application
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components.yml#/components/schemas/Score'
      parameters:
      - name: application_id
        in: query
        schema:
          type: string
        required: true
      - name: sub_criteria_id
        in: query
        schema:
          type: string
        required: true
      - name: score_history
        in: query
        schema:
          type: boolean
        required: false
      - name: score
        in: query
        schema:
          type: integer
        required: false
      - name: justification
        in: query
        schema:
          type: string
        required: false
      - name: date_created
        in: query
        schema:
          type: string
        required: false
      - name: user_id
        in: query
        schema:
          type: string
        required: false
    post:
      tags:
        - scores
      summary: post score for subcriteria in application
      description: post a score for a subcriteria in an application
      operationId: api.routes.post_score_for_application_sub_criteria
      requestBody:
        description: Score creation parameters
        required: true
        content:
          application/json:
            schema:
              $ref: 'components.yml#/components/schemas/PostScore'
            example:
              score: 3
              justification: 'bang average'
              application_id: 'r3p1ac33-7412-4991-c4t1-c41cbf4d3bbd'
              sub_criteria_id: 'app-info'
              user_id: 'gio'
      responses:
        201:
          description: SUCCESS - Score for Subcriteria in Application Submitted
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: 'components.yml#/components/schemas/Score'
        401:
          description: ERROR - Could not Save Score
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/Error'
              example:
                code: 401
                status: 'error'
                message: 'Could not save Score for application sub-criteria'

  '/flag':
    get:
      tags:
        - flags
      summary: get flags for an application
      description: get flags for an application
      operationId: api.routes.get_flags_for_application
      responses:
        200:
          description: SUCCESS - Flags for an Application
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components.yml#/components/schemas/Flag'
      parameters:
      - name: application_id
        in: query
        schema:
          type: string
        required: true
    post:
      tags:
        - flags
      summary: post a flag for an application
      description: post a flag for an application
      operationId: api.routes.post_flag_for_application
      requestBody:
        description: Flag creation parameters
        required: true
        content:
          application/json:
            schema:
              $ref: 'components.yml#/components/schemas/PostFlag'
            example:
              justification: 'justification for flagging'
              section_to_flag: 'information on the section to flag'
              flag_type: 'FLAGGED'
              application_id: 'r3p1ac33-7412-4991-c4t1-c41cbf4d3bbd'
              user_id: 'r3p1ac33-7412-4991-c4t1-c41cbf4d3bbd'
      responses:
        201:
          description: SUCCESS - Flag for Application Submitted
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: 'components.yml#/components/schemas/Flag'
        401:
          description: ERROR - Could not Save Flag
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/Error'
              example:
                code: 401
                status: 'error'
                message: 'Could not save Flag for application'

  '/sub_criteria_overview/{application_id}/{sub_criteria_id}':
    parameters:
    - name: application_id
      in: path
      required: true
      schema:
        type: string
        format: path
    - name: sub_criteria_id
      in: path
      required: true
      schema:
        type: string
        format: path
    get:
      tags:
        - assessments
      summary: Sub criteria
      description: Returns sub criteria metadata and themes for an applications sub-criteria
      operationId: api.routes.sub_criteria
      responses:
        200:
          description: SUCCESS - A subcriteria
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/SubCriteria'

  '/application/{application_id}/status':
    parameters:
      - name: application_id
        in: path
        required: true
        schema:
          type: string
          format: path
    post:
      tags:
        - assessment
      summary: Update application status to completed
      description: Update application status to completed
      operationId: api.routes.update_ar_status_to_completed
      responses:
       200:
          description: Successfully updated application status to completed.

  '/sub_criteria_overview/banner_state/{application_id}':
    parameters:
    - name: application_id
      in: path
      required: true
      schema:
        type: string
        format: path
    get:
      tags:
        - assessments
      summary: Banner state
      description: Returns state of banner for an application
      operationId: api.routes.get_banner_state
      responses:
        200:
          description: SUCCESS - Banner state
          content:
            application/json:
              schema:
                type: object
                properties:
                  short_id:
                    type: string
                    example: "FUNDX_R2"
                  funding_amount_requested:
                    type: number
                    example: 100000
                  project_name:
                    type: string
                    example: "Refurbish the community centre."
                  fund_id:
                    type: string
                    example: "12345678abcdefgh"
                  workflow_status:
                    type: string
                    example: "COMPLETED"

  '/application_overviews/{application_id}':
    parameters:
    - name: application_id
      in: path
      required: true
      schema:
        type: string
        format: path
    get:
      tags:
        - assessments
      summary: Retrieves data to populate the assessors task list page for a given application
      description: Retrieves data to populate the assessors task list page for a given application
      operationId: api.routes.get_assessor_task_list_state
      responses:
        200:
          description: SUCCESS - Accessor task list state
          content:
            application/json:
              schema:
                type: object
                $ref: 'assessor_task_list.yml#/components/schemas/AssessorTaskListState'

  '/sub_criteria_themes/{application_id}/{theme_id}':
    parameters:
    - name: application_id
      in: path
      required: true
      schema:
        type: string
        format: path
    - name: theme_id
      in: path
      required: true
      schema:
        type: string
        format: path
    get:
      tags:
        - assessments
      summary: Retrieves data to populate the answers for sub criteria theme
      description: Retrieves data to populate the answers for sub criteria theme
      operationId: api.routes.get_sub_criteria_theme_answers
      responses:
        200:
          description: SUCCESS - Sub criteria themes
          content:
            application/json:
              schema:
                type: array
                $ref: 'components.yml#/components/schemas/Sub_criteria_theme'
              example:
                [
                {
                  "answer": [
                    ["Capital funding","2300"],
                    ["Revenue funding (optional)","2300"]
                  ],
                  "field_id": ["HhhyGh","jhusgT"],
                  "field_type": "numberField",
                  "form_name": "",
                  "presentation_type": "grouped_fields",
                  "question": "Total funding request"
                },
                {
                  "answer": "Capital costs",
                  "field_id": "ThLigF",
                  "field_type": "multiInputField",
                  "form_name": "funding-required",
                  "presentation_type": "heading",
                  "question": "Capital costs"
                },
                {
                  "field_id": "ThLigF",
                  "field_type": "textField",
                  "form_name": "funding-required",
                  "presentation_type": "description",
                  "question": "Describe the cost"
                },
                {
                  "field_id": "ThLigF",
                  "field_type": "numberField",
                  "form_name": "funding-required",
                  "presentation_type": "amount",
                  "question": "Amount"
                },
                {
                  "answer": "2300",
                  "field_id": "fnIdkJ",
                  "field_type": "numberField",
                  "form_name": "funding-required",
                  "presentation_type": "text",
                  "question": "Asset value"
                },
              ]
        500:
          description: "Bad request - Incorrect application_id or theme_id"
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/GeneralError'
  '/comment':
    get:
      tags:
        - comments
      summary: get comments for subcriteria in application
      description: get comments for a subcriteria in an application
      operationId: api.routes.comments_for_application_sub_criteria
      responses:
        200:
          description: SUCCESS - A list of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components.yml#/components/schemas/Comment'
      parameters:
      - name: application_id
        in: query
        schema:
          type: string
        required: true
      - name: sub_criteria_id
        in: query
        schema:
          type: string
        required: true
      - name: theme_id
        in: query
        schema:
          type: string
        required: false
      - name: comment_id
        in: query
        schema:
          type: string
        required: false
      - name: comment
        in: query
        schema:
          type: string
        required: false
      - name: date_created
        in: query
        schema:
          type: string
        required: false
      - name: user_id
        in: query
        schema:
          type: string
        required: false
      - name: comment_type
        in: query
        schema:
          type: string
        required: false
    post:
      tags:
        - comments
      summary: post a comment for subcriteria in application
      description: post a comment for a subcriteria in an application
      operationId: api.routes.post_comments_for_application_sub_criteria
      requestBody:
        description: Comment creation parameters
        required: true
        content:
          application/json:
            schema:
              $ref: 'components.yml#/components/schemas/PostComment'
            example:
              application_id: 'r3p1ac33-7412-4991-c4t1-c41cbf4d3bbd'
              comment: 'Please provide more information'
              user_id: 'abu'
              sub_criteria_id: 'app-info'
              comment_type: 'COMMENT'
              theme_id: "something"
      responses:
        201:
          description: SUCCESS - Comment for Subcriteria in Application Submitted
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: 'components.yml#/components/schemas/Comment'

  '/progress':
    post:
      tags:
        - progress
      summary: get % progress for an application
      description: get % progress for an application
      operationId: api.routes.post_progress_for_applications
      responses:
        200:
          description: SUCCESS - % progress for an application
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components.yml#/components/schemas/Progress'
        400:
          description: "Bad request - Incorrect application_id or application_ids"
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/GeneralError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                application_ids:
                  type: array
                  items:
                    type: string
    get:
      tags:
        - progress
      summary: get % progress for an application
      description: get % progress for an application
      operationId: api.routes.get_progress_for_applications
      responses:
        200:
          description: SUCCESS - % progress for an application
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components.yml#/components/schemas/Progress'
        400:
          description: "Bad request - Incorrect application_id or application_ids"
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/GeneralError'
      parameters:
      - name: application_ids
        in: query
        schema:
            type: array
            items:
              type: string
        required: true
