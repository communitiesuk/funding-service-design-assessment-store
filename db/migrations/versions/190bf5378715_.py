"""Empty message.

Revision ID: 190bf5378715
Revises: 910aa9530de5
Create Date: 2022-11-21 13:54:55.349527

"""

from alembic import op
from alembic_utils.pg_function import PGFunction
from alembic_utils.pg_trigger import PGTrigger

# revision identifiers, used by Alembic.
revision = "190bf5378715"
down_revision = "910aa9530de5"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    public_block_blob_mutate = PGFunction(
        schema="public",
        signature="block_blob_mutate()",
        definition=(
            "RETURNS TRIGGER\n    LANGUAGE PLPGSQL\n    AS\n    $$\n   "
            " BEGIN\n        IF NEW.jsonb_blob <> OLD.jsonb_blob THEN\n       "
            " RAISE EXCEPTION 'Cannot mutate application json.';\n        END"
            " IF;\n        RETURN NEW;\n    END;\n    $$"
        ),
    )
    op.create_entity(public_block_blob_mutate)

    public_assessment_records_block_updates_on_app_blob = PGTrigger(
        schema="public",
        signature="block_updates_on_app_blob",
        on_entity="public.assessment_records",
        is_constraint=False,
        definition=(
            "BEFORE UPDATE\n    ON assessment_records\n    FOR EACH ROW\n   " " EXECUTE PROCEDURE block_blob_mutate()"
        ),
    )
    op.create_entity(public_assessment_records_block_updates_on_app_blob)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    public_assessment_records_block_updates_on_app_blob = PGTrigger(
        schema="public",
        signature="block_updates_on_app_blob",
        on_entity="public.assessment_records",
        is_constraint=False,
        definition=(
            "BEFORE UPDATE\n    ON assessment_records\n    FOR EACH ROW\n   " " EXECUTE PROCEDURE block_blob_mutate()"
        ),
    )
    op.drop_entity(public_assessment_records_block_updates_on_app_blob)

    public_block_blob_mutate = PGFunction(
        schema="public",
        signature="block_blob_mutate()",
        definition=(
            "RETURNS TRIGGER\n    LANGUAGE PLPGSQL\n    AS\n    $$\n   "
            " BEGIN\n        IF NEW.jsonb_blob <> OLD.jsonb_blob THEN\n       "
            " RAISE EXCEPTION 'Cannot mutate application json.';\n        END"
            " IF;\n        RETURN NEW;\n    END;\n    $$"
        ),
    )
    op.drop_entity(public_block_blob_mutate)

    # ### end Alembic commands ###
