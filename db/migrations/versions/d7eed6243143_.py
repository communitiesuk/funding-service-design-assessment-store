"""empty message

Revision ID: d7eed6243143
Revises:
Create Date: 2022-09-28 16:47:01.367701

"""
import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op


# revision identifiers, used by Alembic.
revision = "d7eed6243143"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "assessment",
        sa.Column(
            "id",
            sqlalchemy_utils.types.uuid.UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column("compliance_status", sa.Text(), nullable=True),
        sa.Column("application_id", sa.Text(), nullable=True),
        sa.Column("fund_id", sa.Text(), nullable=True),
        sa.Column("round_id", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_assessment")),
    )
    with op.batch_alter_table("assessment", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_assessment_application_id"),
            ["application_id"],
            unique=True,
        )

    op.create_table(
        "criteria",
        sa.Column(
            "id",
            sqlalchemy_utils.types.uuid.UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("round_id", sa.String(), nullable=True),
        sa.Column("fund_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_criteria")),
    )
    op.create_table(
        "sub_criteria",
        sa.Column(
            "id",
            sqlalchemy_utils.types.uuid.UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column(
            "criteria_id",
            sqlalchemy_utils.types.uuid.UUIDType(binary=False),
            nullable=True,
        ),
        sa.Column("sub_criteria_title", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["criteria_id"],
            ["criteria.id"],
            name=op.f("fk_sub_criteria_criteria_id_criteria"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_sub_criteria")),
    )
    op.create_table(
        "compliance",
        sa.Column(
            "id",
            sqlalchemy_utils.types.uuid.UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column(
            "assessment_id",
            sqlalchemy_utils.types.uuid.UUIDType(binary=False),
            nullable=True,
        ),
        sa.Column(
            "sub_criteria_id",
            sqlalchemy_utils.types.uuid.UUIDType(binary=False),
            nullable=True,
        ),
        sa.Column("is_compliant", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["assessment_id"],
            ["assessment.id"],
            name=op.f("fk_compliance_assessment_id_assessment"),
        ),
        sa.ForeignKeyConstraint(
            ["sub_criteria_id"],
            ["sub_criteria.id"],
            name=op.f("fk_compliance_sub_criteria_id_sub_criteria"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_compliance")),
    )
    op.create_table(
        "scores_justifications",
        sa.Column(
            "id",
            sqlalchemy_utils.types.uuid.UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column(
            "assessment_id",
            sqlalchemy_utils.types.uuid.UUIDType(binary=False),
            nullable=True,
        ),
        sa.Column("assessor_user_id", sa.Text(), nullable=False),
        sa.Column(
            "sub_criteria_id",
            sqlalchemy_utils.types.uuid.UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column("score", sa.Integer(), nullable=False),
        sa.Column("justification", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["assessment_id"],
            ["assessment.id"],
            name=op.f("fk_scores_justifications_assessment_id_assessment"),
        ),
        sa.ForeignKeyConstraint(
            ["sub_criteria_id"],
            ["sub_criteria.id"],
            name=op.f("fk_scores_justifications_sub_criteria_id_sub_criteria"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_scores_justifications")),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("scores_justifications")
    op.drop_table("compliance")
    op.drop_table("sub_criteria")
    op.drop_table("criteria")
    with op.batch_alter_table("assessment", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_assessment_application_id"))

    op.drop_table("assessment")
    # ### end Alembic commands ###
