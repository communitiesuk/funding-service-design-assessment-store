"""empty message

Revision ID: 55dcd4abf66c
Revises: 4bdc171458b2
Create Date: 2023-07-10 16:49:35.360072

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "55dcd4abf66c"
down_revision = "4bdc171458b2"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tag",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("value", sa.String(length=255), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column(
            "colour",
            sa.Enum("NONE", "GREEN", "RED", "BLUE", name="colour"),
            nullable=False,
        ),
        sa.Column("fund_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("round_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "creator_user_id", postgresql.UUID(as_uuid=True), nullable=False
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tag")),
    )

    op.execute(
        sa.text(
            "CREATE UNIQUE INDEX value_round_id_unique_idx ON tag (lower(value), round_id)"
        )
    )

    op.create_table(
        "tag_association",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "application_id", postgresql.UUID(as_uuid=True), nullable=True
        ),
        sa.Column("associated", sa.Boolean(), nullable=False),
        sa.Column("tag_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("user_id", sa.String(length=255), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["assessment_records.application_id"],
            name=op.f("fk_tag_association_application_id_assessment_records"),
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"], ["tag.id"], name=op.f("fk_tag_association_tag_id_tag")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tag_association")),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("tag_association")
    op.drop_table("tag")
    # ### end Alembic commands ###
